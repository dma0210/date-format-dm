{"version":3,"sources":["js/Clock.jsx","js/App.js","index.js","css/Clock.module.css"],"names":["FORMATVIEW","Clock","props","state","time","Date","toLocaleString","hour","minute","hour12","formatCondition","bgCondition","Math","floor","random","toString","this","setState","intervalID","setInterval","clearInterval","changeBG","second","toLocaleDateString","month","day","year","block_bg","background","className","styles","mainbg","style","onClick","onClickChange","date","React","Component","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+NAGMA,EACU,EADVA,EAES,EAFTA,EAGU,EAHVA,EAIS,EAJTA,EAKa,EAINC,EAAb,kDACI,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAM,IAAIC,MAAOC,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,IACvFC,gBAAiBV,EACjBW,YAAaC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,KAL1C,EADvB,gEASyB,IAAD,OAClBC,KAAKC,SAAS,CACRP,gBAAiBM,KAAKb,MAAMO,gBAAkBV,EAA2BgB,KAAKb,MAAMO,gBAAkB,EAAIV,IAEhHgB,KAAKE,WAAaC,aAAY,kBAC9B,EAAKF,SAAS,CACZb,MAAM,IAAIC,MAAOC,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,QAExF,OAjBP,6CAqBMW,cAAcJ,KAAKE,cArBzB,iCA0BQ,OAAON,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,MA1B3D,sCA6BK,IAAD,OAKM,OAJFC,KAAKC,UAAS,SAAAd,GAAK,MAAK,CACpBQ,YAAa,EAAKU,WAClBX,gBAAiB,EAAKP,MAAMO,gBAAkBV,EAA2B,EAAKG,MAAMO,gBAAkB,EAAIV,MAEpGgB,KAAKb,MAAMO,iBACf,KAAKV,EACLoB,cAAcJ,KAAKE,YACnBF,KAAKC,SAAS,CACZb,MAAM,IAAIC,MAAOC,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,MAEzFO,KAAKE,WAAaC,aAAY,kBAC9B,EAAKF,SAAS,CACZb,MAAM,IAAIC,MAAOC,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,QAExF,KACG,MACJ,KAAKT,EACLoB,cAAcJ,KAAKE,YACnBF,KAAKC,SAAS,CACZb,MAAM,IAAIC,MAAOC,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,EAAOa,OAAQ,cAExGN,KAAKE,WAAaC,aAAY,kBAC9B,EAAKF,SAAS,CACZb,MAAM,IAAIC,MAAOC,eAAe,QAAS,CAAEC,KAAM,UAAWC,OAAQ,UAAWC,QAAQ,EAAOa,OAAQ,gBAEvG,KACG,MACJ,KAAKtB,EACLoB,cAAcJ,KAAKE,YACnBF,KAAKC,SAAS,CACZb,MAAM,IAAIC,MAAOkB,mBAAmB,WAEtCP,KAAKE,WAAaC,aAAY,kBAC9B,EAAKF,SAAS,CACZb,MAAM,IAAIC,MAAOkB,mBAAmB,aAErC,KACG,MACJ,KAAKvB,EACLoB,cAAcJ,KAAKE,YACnBF,KAAKC,SAAS,CACZb,MAAM,IAAIC,MAAOkB,mBAAmB,QAAQ,CAACC,MAAO,OAAOC,IAAK,UAAUC,KAAK,cAEjFV,KAAKE,WAAaC,aAAY,kBAC9B,EAAKF,SAAS,CACZb,MAAM,IAAIC,MAAOkB,mBAAmB,QAAQ,CAACC,MAAO,OAAOC,IAAK,UAAUC,KAAK,gBAEhF,QA7Ef,+BAsFc,IAAD,OACCC,EAAW,CAACC,WAAW,IAAIZ,KAAKb,MAAMQ,aAC9C,OAEA,yBAAKkB,UAAWC,IAAOC,OAAQC,MAAOL,EAAUM,QAAS,kBAAK,EAAKC,kBACjE,yBAAKL,UAAWC,IAAOK,MAClBnB,KAAKb,MAAMC,WA5FxB,GAA2BgC,IAAMC,WCHpBC,EAAb,uKAII,OAGE,kBAAC,EAAD,UAPN,GAAyBD,a,MCHzBE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCLjDC,EAAOC,QAAU,CAAC,OAAS,sBAAsB,KAAO,sB","file":"static/js/main.b93240b7.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from '../css/Clock.module.css';\r\n\r\nconst FORMATVIEW = {\r\n    TIME_SHORT: 1,\r\n    TIME_FULL: 2,\r\n    DATE_SHORT: 3,\r\n    DATE_LONG: 4,\r\n    FORMAT_LENGHT: 4\r\n}\r\n\r\n\r\nexport class Clock extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        time: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true}),\r\n        formatCondition: FORMATVIEW.TIME_SHORT,\r\n        bgCondition: Math.floor(Math.random()*16777215).toString(16)\r\n      };\r\n    }\r\n    componentDidMount() {\r\n      this.setState({\r\n            formatCondition: this.state.formatCondition < FORMATVIEW.FORMAT_LENGHT ? this.state.formatCondition + 1 : FORMATVIEW.TIME_SHORT\r\n          })\r\n      this.intervalID = setInterval(() => \r\n      this.setState({\r\n        time: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true})\r\n      })\r\n      ,1000);\r\n      \r\n    }\r\n    componentWillUnmount() {\r\n      clearInterval(this.intervalID);\r\n    }\r\n    \r\n    changeBG()\r\n    {\r\n        return Math.floor(Math.random()*16777215).toString(16);\r\n    }\r\n    onClickChange()\r\n    {\r\n        this.setState(state => ({\r\n            bgCondition: this.changeBG(),\r\n            formatCondition: this.state.formatCondition < FORMATVIEW.FORMAT_LENGHT ? this.state.formatCondition + 1 : FORMATVIEW.TIME_SHORT\r\n          }))\r\n          switch (this.state.formatCondition) {\r\n              case FORMATVIEW.TIME_SHORT:\r\n              clearInterval(this.intervalID)\r\n              this.setState({\r\n                time: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true})\r\n              })\r\n              this.intervalID = setInterval(() => \r\n              this.setState({\r\n                time: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true})\r\n              })\r\n              ,1000);\r\n                  break;\r\n              case FORMATVIEW.TIME_FULL:\r\n              clearInterval(this.intervalID)\r\n              this.setState({\r\n                time: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true , second: 'numeric'})\r\n              })\r\n              this.intervalID = setInterval(() => \r\n              this.setState({\r\n                time: new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true , second: 'numeric'})\r\n              })\r\n              ,1000);\r\n                  break;\r\n              case FORMATVIEW.DATE_SHORT:\r\n              clearInterval(this.intervalID)\r\n              this.setState({\r\n                time: new Date().toLocaleDateString('en-US')\r\n              })\r\n              this.intervalID = setInterval(() => \r\n              this.setState({\r\n                time: new Date().toLocaleDateString('en-US')\r\n              })\r\n              ,1000*60);\r\n                  break;\r\n              case FORMATVIEW.DATE_LONG:\r\n              clearInterval(this.intervalID)\r\n              this.setState({\r\n                time: new Date().toLocaleDateString('en-US',{month: 'long',day: 'numeric',year:'2-digit'})\r\n              })\r\n              this.intervalID = setInterval(() => \r\n              this.setState({\r\n                time: new Date().toLocaleDateString('en-US',{month: 'long',day: 'numeric',year:'2-digit'})\r\n              })\r\n              ,1000*60);\r\n                  break;\r\n          \r\n              default:\r\n                  break;\r\n          }\r\n          \r\n    }\r\n\r\n    render() {\r\n        const block_bg = {background:\"#\"+this.state.bgCondition}\r\n      return ( \r\n      \r\n      <div className={styles.mainbg} style={block_bg} onClick={()=> this.onClickChange()}>\r\n        <div className={styles.date}>\r\n            {this.state.time}\r\n         </div>\r\n      </div>\r\n      \r\n      )\r\n    }\r\n  }","import React, { Component } from 'react';\nimport { Clock } from './Clock';\n\n\n\n\n\n\n\nexport class App extends Component {\n  render() {\n\n\n    return (\n\n\n      <Clock />\n\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './js/App';\nimport './css/index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainbg\":\"Clock_mainbg__2X3A9\",\"date\":\"Clock_date__24PXV\"};"],"sourceRoot":""}